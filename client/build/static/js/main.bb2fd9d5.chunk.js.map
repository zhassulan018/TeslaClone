{"version":3,"sources":["Header.js","MenuItem.js","Menu.js","HeaderBlock.js","firebase.js","features/userSlice.js","ButtonPrimary.js","ButtonSecondary.js","Login.js","Signup.js","Car.js","TeslaAccount.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Header","isMenuOpen","setIsMenuOpen","className","to","src","alt","onClick","MenuItem","title","Menu","HeaderBlock","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","ButtonPrimary","type","ButtonSecondary","Login","useState","email","setEmail","password","setPassword","dispatch","useDispatch","history","useHistory","htmlFor","id","value","onChange","e","target","preventDefault","signInWithEmailAndPassword","then","userAuth","uid","displayName","push","catch","error","alert","message","Signup","fName","setFName","lName","setLName","createUserWithEmailAndPassword","updateProfile","Car","imgSrc","model","testDrive","TeslaAccount","useSelector","logoutOfApp","signOut","App","useEffect","onAuthStateChanged","exact","path","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb2fd9d5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\nimport { Link } from \"react-router-dom\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nfunction Header({ isMenuOpen, setIsMenuOpen }) {\n  return (\n    <div className='header'>\n      <div className='header__logo'>\n        <Link to='/'>\n          <img\n            className='header__logo-img'\n            src='https://assets.website-files.com/5e8fceb1c9af5c3915ec97a0/5ec2f037975ed372da9f6286_Tesla-Logo-PNG-HD.png'\n            alt=''\n          />\n        </Link>\n      </div>\n      <div className='header__links'>\n        <Link to='/'>Model S</Link>\n        <Link to='/'>Model 3</Link>\n        <Link to='/'>Model X</Link>\n        <Link to='/'>Model Y</Link>\n        <Link to='/'>Solar Roof</Link>\n        <Link to='/'>Solar Panels</Link>\n      </div>\n      <div className='header__right'>\n        <Link to='/' className={isMenuOpen && \"header__link--hidden\"}>\n          Shop\n        </Link>\n        <Link to='/login' className={isMenuOpen && \"header__link--hidden\"}>\n          Tesla Account\n        </Link>\n        <div\n          className='header__menu'\n          onClick={() => setIsMenuOpen(!isMenuOpen)}\n        >\n          {isMenuOpen ? <CloseIcon /> : <MenuIcon />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./MenuItem.css\";\n\nfunction MenuItem({ title }) {\n  return (\n    <div className='menuItem'>\n      <h4>{title}</h4>\n    </div>\n  );\n}\n\nexport default MenuItem;\n","import React from \"react\";\nimport \"./Menu.css\";\nimport MenuItem from \"./MenuItem\";\n\nfunction Menu() {\n  return (\n    <div className='menu'>\n      <MenuItem title='existing inventory' />\n      <MenuItem title='used inventory' />\n      <MenuItem title='trade-in' />\n      <MenuItem title='cybertruck' />\n      <MenuItem title='roadster' />\n      <MenuItem title='semi' />\n      <MenuItem title='charging' />\n      <MenuItem title='powerwall' />\n      <MenuItem title='commercial solar' />\n      <MenuItem title='test drive' />\n      <MenuItem title='find us' />\n      <MenuItem title='support' />\n      <MenuItem title='united states' />\n    </div>\n  );\n}\n\nexport default Menu;\n","import React from \"react\";\nimport \"./HeaderBlock.css\";\n\nfunction HeaderBlock() {\n  return (\n    <div className='headerBlock'>\n      <div className='headerBlock__info'>\n        <div className='headerBlock__infoText'>\n          <h1>Model 3</h1>\n          <h4>\n            Order online for <span>Touchless Delivery</span>\n          </h4>\n        </div>\n        <div className='headerBlock__info__actions'>\n          <button className='headerBlock__buttonPrimary'>custom order</button>\n          <button className='headerBlock__buttonSecondary'>\n            existing inventory\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderBlock;\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCQ-rSITmEmdWdeAeabLkmajjYZlW8UMN0\",\n  authDomain: \"tesla-clone-497f5.firebaseapp.com\",\n  projectId: \"tesla-clone-497f5\",\n  storageBucket: \"tesla-clone-497f5.appspot.com\",\n  messagingSenderId: \"389307732532\",\n  appId: \"1:389307732532:web:6f25e700f94a522b06b061\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst auth = firebaseApp.auth();\n\nexport { auth };\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.user.value)`\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import React from \"react\";\nimport \"./ButtonPrimary.css\";\n\nfunction ButtonPrimary({ name, type, onClick }) {\n  return (\n    <button className='buttonPrimary' onClick={onClick} type={type}>\n      {name}\n    </button>\n  );\n}\n\nexport default ButtonPrimary;\n","import React from \"react\";\nimport \"./ButtonSecondary.css\";\n\nfunction ButtonSecondary({ name, type, onClick }) {\n  return (\n    <button className='buttonSecondary' type={type} onClick={onClick}>\n      {name}\n    </button>\n  );\n}\n\nexport default ButtonSecondary;\n","import React, { useState } from \"react\";\nimport \"./Login.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport LanguageOutlinedIcon from \"@material-ui/icons/LanguageOutlined\";\nimport { auth } from \"./firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"./features/userSlice\";\nimport ButtonPrimary from \"./ButtonPrimary.js\";\nimport ButtonSecondary from \"./ButtonSecondary\";\n\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const signIn = (e) => {\n    e.preventDefault();\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((userAuth) => {\n        dispatch(\n          login({\n            email: userAuth.user.email,\n            uid: userAuth.user.uid,\n            displayName: userAuth.user.displayName\n          })\n        );\n        history.push(\"/teslaaccount\");\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  return (\n    <div className='login'>\n      <div className='login__header'>\n        <div className='login__logo'>\n          <Link to='/'>\n            {\" \"}\n            <img\n              src='https://assets.website-files.com/5e8fceb1c9af5c3915ec97a0/5ec2f037975ed372da9f6286_Tesla-Logo-PNG-HD.png'\n              alt=''\n            />\n          </Link>\n        </div>\n        <div className='login__language'>\n          <LanguageOutlinedIcon /> <span>en-US</span>\n        </div>\n      </div>\n      <div className='login__info'>\n        <h1>Sign In</h1>\n        <form className='login__form'>\n          <label htmlFor='email'>Email Address</label>\n          <input\n            id='email'\n            type='email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <label htmlFor='password'>Password</label>\n          <input\n            id='password'\n            type='password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <ButtonPrimary name='Sign In' type='submit' onClick={signIn} />\n        </form>\n        <div className='login__divider'>\n          <hr /> <span>OR</span> <hr />\n        </div>\n        <Link to='/signup'>\n          <ButtonSecondary name='create account' />\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport \"./Signup.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport LanguageOutlinedIcon from \"@material-ui/icons/LanguageOutlined\";\nimport { useDispatch } from \"react-redux\";\nimport { auth } from \"./firebase\";\nimport { login } from \"./features/userSlice\";\n\nfunction Signup() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [fName, setFName] = useState(\"\");\n  const [lName, setLName] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const signUp = (e) => {\n    e.preventDefault();\n\n    if (!fName) {\n      return alert(\"Please enter a first name!\");\n    }\n    if (!lName) {\n      return alert(\"Please enter a last name!\");\n    }\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((userAuth) => {\n        userAuth.user\n          .updateProfile({\n            displayName: fName\n          })\n          .then(() => {\n            dispatch(\n              login({\n                email: userAuth.user.email,\n                uid: userAuth.user.uid,\n                displayName: fName\n              })\n            );\n            history.push(\"/teslaaccount\");\n          });\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  return (\n    <div className='signup'>\n      <div className='signup__header'>\n        <div className='signup__logo'>\n          <Link to='/'>\n            {\" \"}\n            <img\n              src='https://assets.website-files.com/5e8fceb1c9af5c3915ec97a0/5ec2f037975ed372da9f6286_Tesla-Logo-PNG-HD.png'\n              alt=''\n            />\n          </Link>\n        </div>\n        <div className='signup__language'>\n          <LanguageOutlinedIcon /> <span>en-US</span>\n        </div>\n      </div>\n      <div className='signup__info'>\n        <h1>Create Account</h1>\n        <form className='signup__form'>\n          <label htmlFor='fName'>First Name</label>\n          <input\n            id='fName'\n            type='text'\n            value={fName}\n            onChange={(e) => setFName(e.target.value)}\n          />\n          <label htmlFor='lName'>Last Name</label>\n          <input\n            id='lName'\n            type='text'\n            value={lName}\n            onChange={(e) => setLName(e.target.value)}\n          />\n          <label htmlFor='email'>Email Address</label>\n          <input\n            id='email'\n            type='email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <label htmlFor='password'>Password</label>\n          <input\n            id='password'\n            type='password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <button type='submit' onClick={signUp}>\n            Create Account\n          </button>\n        </form>\n        <div className='signup__divider'>\n          <hr /> <span>OR</span> <hr />\n        </div>\n        <Link to='/login'>\n          <button>Sign In</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport ButtonPrimary from \"./ButtonPrimary\";\nimport ButtonSecondary from \"./ButtonSecondary\";\nimport \"./Car.css\";\n\nfunction Car({ imgSrc, model, testDrive }) {\n  return (\n    <div className='car'>\n      <div className='car__image'>\n        <img src={imgSrc} alt='' />\n      </div>\n      <h2 className='car__model'>{model}</h2>\n      <div className='car__actions'>\n        <ButtonPrimary name='order' />\n        {testDrive && <ButtonSecondary name='test drive' />}\n      </div>\n      <p className='car__info'>\n        <span>Request a Call</span> to speak with a product specialist, value\n        your trade-in or apply for leasing\n      </p>\n    </div>\n  );\n}\n\nexport default Car;\n","import React from \"react\";\nimport \"./TeslaAccount.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout, selectUser } from \"./features/userSlice\";\nimport Car from \"./Car\";\nimport { auth } from \"./firebase\";\n\nfunction TeslaAccount({ isMenuOpen, setIsMenuOpen }) {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const logoutOfApp = () => {\n    auth\n      .signOut()\n      .then(() => {\n        dispatch(logout());\n        history.push(\"/\");\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  return (\n    <div className='teslaAccount'>\n      <div className='teslaAccount__header'>\n        <div className='teslaAccount__logo'>\n          <Link to='/'>\n            <img\n              src='https://assets.website-files.com/5e8fceb1c9af5c3915ec97a0/5ec2f037975ed372da9f6286_Tesla-Logo-PNG-HD.png'\n              alt=''\n            />\n          </Link>\n        </div>\n        <div className='teslaAccount__links'>\n          <Link to='/teslaaccount'>Model S</Link>\n          <Link to='/teslaaccount'>Model 3</Link>\n          <Link to='/teslaaccount'>Model X</Link>\n          <Link to='/teslaaccount'>Model Y</Link>\n          <Link to='/teslaaccount'>Solar Roof</Link>\n          <Link to='/teslaaccount'>Solar Panels</Link>\n          <Link to='/teslaaccount'>Shop</Link>\n          <Link to='/teslaaccount'>Tesla Account</Link>\n          <Link onClick={logoutOfApp}>Log out</Link>\n          <div\n            className='teslaAccount__menu'\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\n          >\n            {isMenuOpen ? (\n              <CloseIcon className='teslaAccount__closeMenu' />\n            ) : (\n              <MenuIcon />\n            )}\n          </div>\n        </div>\n      </div>\n      <div className='teslaAccount__info'>\n        <div className='teslaAccount__person'>\n          <h4>{user?.displayName + \"'s\"} Tesla</h4>\n        </div>\n        <div className='teslaAccount__infoRight'>\n          <Link>Home</Link>\n          <Link>Account</Link>\n          <Link>History</Link>\n          <Link onClick={logoutOfApp}>Sign out</Link>\n        </div>\n      </div>\n      <div className='teslaAccount__car'>\n        <Car\n          imgSrc='https://www.tesla.com/tesla_theme/assets/img/mytesla/v3/header-nocar-models@2x.jpg?20170815'\n          model='model s'\n          testDrive\n        />\n        <Car\n          imgSrc='https://www.tesla.com/tesla_theme/assets/img/mytesla/v3/header-nocar-modelx@2x.jpg?20170815'\n          model='model x'\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default TeslaAccount;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Menu from \"./Menu\";\r\nimport HeaderBlock from \"./HeaderBlock\";\r\nimport Login from \"./Login\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login, logout, selectUser } from \"./features/userSlice\";\r\nimport Signup from \"./Signup\";\r\nimport TeslaAccount from \"./TeslaAccount\";\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((userAuth) => {\r\n      if (userAuth) {\r\n        // User is signed in\r\n        dispatch(\r\n          login({\r\n            email: userAuth.email,\r\n            uid: userAuth.uid,\r\n            displayName: userAuth.displayName\r\n          })\r\n        );\r\n      } else {\r\n        // User is signed out\r\n        dispatch(logout());\r\n      }\r\n    });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className='app'>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Header isMenuOpen={isMenuOpen} setIsMenuOpen={setIsMenuOpen} />\r\n            {isMenuOpen && <Menu />}\r\n            <HeaderBlock />\r\n          </Route>\r\n          <Route exact path='/login'>\r\n            {user ? <Redirect to='/teslaaccount' /> : <Login />}\r\n          </Route>\r\n          <Route exact path='/signup'>\r\n            <Signup />\r\n          </Route>\r\n          <Route exact path='/teslaaccount'>\r\n            {!user ? (\r\n              <Redirect to='/login' />\r\n            ) : (\r\n              <>\r\n                <TeslaAccount\r\n                  isMenuOpen={isMenuOpen}\r\n                  setIsMenuOpen={setIsMenuOpen}\r\n                />\r\n                {isMenuOpen && <Menu />}\r\n              </>\r\n            )}\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"../features/userSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer\r\n  }\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}